    /*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
    
    *,
    *::after,
    *::before {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }
    
    html {
        font-size: 62.5%;
    }
    /* project based setting  */
    
    body {
        font-family: "Lato", sans-serif;
        font-weight: 400;
        font-size: 1.6rem;
        line-height: 1.7;
        color: #777;
    }
    /* text-box container */
    
    header {
        position: relative;
        height: 95vh;
        background-image: url(/img/hero.jpg);
        /* try to fit the element inside of the box */
        /* the border of the top staty the same. if center, then when shrink the page, the top and bottom will all be cropped top */
        background-size: cover;
    }
    /* text-box logo element */
    
    .logo-container {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }
    
    .logo {
        /* control the height, the browser will figure out the width */
        height: 3.5rem;
    }
    /* text-box title element */
    
    .text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
    
    .heading-primary {
        color: #ffffff;
        text-transform: uppercase;
        margin-bottom: 56px;
    }
    
    .heading-primary-main {
        display: block;
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.6rem;
        animation-name: moveInLeft;
        animation-duration: 1s;
        /* animation-timing-function: ease-in; */
    }
    
    .heading-primary-sub {
        display: block;
        font-size: 2rem;
        font-weight: 700;
        padding: 0 auto;
        letter-spacing: 1.6rem;
        animation-name: moveInRight;
        animation-duration: 1s;
        animation-timing-function: ease-out;
        /* animation-timing-function: ease-out; */
        /* animation-iteration-count:3; */
    }
    
    .btn:link,
    .btn:visited {
        text-transform: uppercase;
        text-decoration: none;
        /* in border-box model, the inline-block works as block element */
        display: inline-block;
        /* 当btn被hover，或者clicked之后，用0.2s出现下面hover和点击之后的样子 */
        transition: all .2s;
        border-radius: 100px;
        /* 因为要给btn：：after增加absolute，所以要给：：after的父亲增加relative，伪选择器的父选择器是原btn */
        position: relative;
    }
    
    .button-animated {
        animation: moveInButton .5s ease-out .75s;
        /*The animation was visible before the animation happens, coz the delay of 0.75s. style will be apply before animaiton starts   */
        animation-fill-mode: backwards;
    }
    /* 点击后印象减少 */
    
    .btn:hover {
        transform: translateY(-0.3rem);
        box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    }
    /* when we click the btn */
    
    .btn:active {
        transform: translateY(-0.1rem);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
    }
    /* 一个和btn完全一样的，在btn底下的psedu btn，for 动画*/
    
    .btn::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 100px;
        /* need to put the pseudo ele behind the btn element, by doing so, make it absolute element */
        /* relative position is in relative with its father*/
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all 0.2s
    }
    /* 普遍按钮底下一个相同的ele，当hover的时候 */
    /* when we hover the button, we want to put something in the after psude element */
    /* this is a whole new ::after element only when we hover on the btn */
    
    .btn:hover::after {
        transform: scaleX(1.2) scaleY(1.3);
        opacity: 0;
    }
    /* 此按钮颜色，背景色和大小 */
    
    .btn-white {
        background-color: #fff;
        color: #777;
        padding: 1.5rem 4rem;
    }
    /* 本按钮的下面有一个 */
    
    .btn-white::after {
        background-color: #fff;
    }
    
    @keyframes moveInLeft {
        0% {
            transform: translateX(-10rem);
            opacity: 0;
        }
        80% {
            transform: translateX(1rem);
        }
        100% {
            transform: translateX(0);
            opacity: 100%
        }
    }
    
    @keyframes moveInRight {
        0% {
            transform: translateX(10rem);
            opacity: 0;
        }
        80% {
            transform: translateX(-1rem);
        }
        100% {
            opacity: 100%;
            transform: translateX(0);
        }
    }
    
    @keyframes moveInButton {
        0% {
            transform: translateY(5rem);
            opacity: 0;
        }
        100% {
            opacity: 100%;
            transform: translateX(0);
        }
    }